name: Staging deployment

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build the Docker image
        run: |
          IMAGE_TAG=library-image:${{ github.run_number }}
          docker build . --file Dockerfile --tag $IMAGE_TAG --no-cache
          docker save $IMAGE_TAG -o library-image.tar
        env:
          IMAGE_TAG: library-image:${{ github.run_number }}

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: library-image
          path: library-image.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: library-image

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DO_SSH_KEY }}

      - name: Transfer Docker image to Droplet
        run: |
          scp -o StrictHostKeyChecking=no library-image.tar root@142.93.14.79:/home/laravel/book-library

      - name: Deploy to Droplet
        run: |
          ssh -o StrictHostKeyChecking=no root@142.93.14.79 << 'EOF'
          cd /home/laravel/book-library
          docker system prune -f
          docker volume prune -f
          docker-compose down
          docker load -i library-image.tar
          docker ps -aq | xargs -r docker rm -f
          docker-compose -f docker-compose.yml up -d --no-build
          EOF

      - name: Post-deploy
        run: |
          ssh -o StrictHostKeyChecking=no root@142.93.14.79 << 'EOF'
          docker exec -w /var/www/html library-app npm run build
          docker exec -w /var/www/html library-app php artisan migrate --force
          EOF
